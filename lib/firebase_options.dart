// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

Future main() async {
  // To load the .env file contents into dotenv.
  // NOTE: fileName defaults to .env and can be omitted in this case.
  // Ensure that the filename corresponds to the path in step 1 and 2.
  await dotenv.load(fileName: ".env");

  //...runapp
}

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static final FirebaseOptions web = FirebaseOptions(
    apiKey: webApiKey,
    appId: '1:582253827589:web:4fd1d1bf92949e226dae6c',
    messagingSenderId: '582253827589',
    projectId: 'esafi-b4575',
    authDomain: 'esafi-b4575.firebaseapp.com',
    databaseURL: 'https://esafi-b4575-default-rtdb.firebaseio.com',
    storageBucket: 'esafi-b4575.firebasestorage.app',
    measurementId: 'G-ZXHXR4KTG6',
  );

  static final FirebaseOptions android = FirebaseOptions(
    apiKey: androidApiKey,
    appId: '1:582253827589:android:28a2a674d240aded6dae6c',
    messagingSenderId: '582253827589',
    projectId: 'esafi-b4575',
    databaseURL: 'https://esafi-b4575-default-rtdb.firebaseio.com',
    storageBucket: 'esafi-b4575.firebasestorage.app',
  );

  static final FirebaseOptions ios = FirebaseOptions(
    apiKey: iosApiKey,
    appId: '1:582253827589:ios:543e602ff45c440d6dae6c',
    messagingSenderId: '582253827589',
    projectId: 'esafi-b4575',
    databaseURL: 'https://esafi-b4575-default-rtdb.firebaseio.com',
    storageBucket: 'esafi-b4575.firebasestorage.app',
    iosBundleId: 'com.example.esafi',
  );

  static final FirebaseOptions macos = FirebaseOptions(
    apiKey: macOsApiKey,
    appId: '1:582253827589:ios:543e602ff45c440d6dae6c',
    messagingSenderId: '582253827589',
    projectId: 'esafi-b4575',
    databaseURL: 'https://esafi-b4575-default-rtdb.firebaseio.com',
    storageBucket: 'esafi-b4575.firebasestorage.app',
    iosBundleId: 'com.example.esafi',
  );

  static final FirebaseOptions windows = FirebaseOptions(
    apiKey: windowsApiKey,
    appId: '1:582253827589:web:b10002f5e8bb10376dae6c',
    messagingSenderId: '582253827589',
    projectId: 'esafi-b4575',
    authDomain: 'esafi-b4575.firebaseapp.com',
    databaseURL: 'https://esafi-b4575-default-rtdb.firebaseio.com',
    storageBucket: 'esafi-b4575.firebasestorage.app',
    measurementId: 'G-42BTEVFVDZ',
  );

  static get androidApiKey => dotenv.env['firebaseAndroidApiKey'];
  static get iosApiKey => dotenv.env['firebaseIosApiKey'];
  static get macOsApiKey => dotenv.env['firebaseMacOsApiKey'];
  static get windowsApiKey => dotenv.env['firebaseWindowsApiKeny'];
  static get webApiKey => dotenv.env['firebaseWebApiKey'];
}
